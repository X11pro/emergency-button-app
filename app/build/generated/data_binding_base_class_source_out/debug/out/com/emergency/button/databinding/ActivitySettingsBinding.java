// Generated by view binder compiler. Do not edit!
package com.emergency.button.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.emergency.button.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton addContactButton;

  @NonNull
  public final RecyclerView contactsRecyclerView;

  @NonNull
  public final TextInputEditText emergencyMessageInput;

  @NonNull
  public final MaterialButton testEmergencyButton;

  @NonNull
  public final SwitchMaterial testModeSwitch;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivitySettingsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton addContactButton, @NonNull RecyclerView contactsRecyclerView,
      @NonNull TextInputEditText emergencyMessageInput, @NonNull MaterialButton testEmergencyButton,
      @NonNull SwitchMaterial testModeSwitch, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.addContactButton = addContactButton;
    this.contactsRecyclerView = contactsRecyclerView;
    this.emergencyMessageInput = emergencyMessageInput;
    this.testEmergencyButton = testEmergencyButton;
    this.testModeSwitch = testModeSwitch;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addContactButton;
      MaterialButton addContactButton = ViewBindings.findChildViewById(rootView, id);
      if (addContactButton == null) {
        break missingId;
      }

      id = R.id.contactsRecyclerView;
      RecyclerView contactsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (contactsRecyclerView == null) {
        break missingId;
      }

      id = R.id.emergencyMessageInput;
      TextInputEditText emergencyMessageInput = ViewBindings.findChildViewById(rootView, id);
      if (emergencyMessageInput == null) {
        break missingId;
      }

      id = R.id.testEmergencyButton;
      MaterialButton testEmergencyButton = ViewBindings.findChildViewById(rootView, id);
      if (testEmergencyButton == null) {
        break missingId;
      }

      id = R.id.testModeSwitch;
      SwitchMaterial testModeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (testModeSwitch == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((CoordinatorLayout) rootView, addContactButton,
          contactsRecyclerView, emergencyMessageInput, testEmergencyButton, testModeSwitch,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
